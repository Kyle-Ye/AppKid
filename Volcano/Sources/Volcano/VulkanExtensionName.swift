//
//  VulkanExtensionName.swift
//  Volcano
//
//  Created by Serhii Mumriak on 20.07.2021.
//

import Foundation
import TinyFoundation
import CVulkan

public enum VulkanExtensionName: String {
    case storage16bit = "VK_KHR_16bit_storage"
    case storage8bit = "VK_KHR_8bit_storage"
    case accelerationStructure = "VK_KHR_acceleration_structure"
    case androidSurface = "VK_KHR_android_surface"
    case bindMemory2 = "VK_KHR_bind_memory2"
    case bufferDeviceAddress = "VK_KHR_buffer_device_address"
    case copyCommands2 = "VK_KHR_copy_commands2"
    case createRenderpass2 = "VK_KHR_create_renderpass2"
    case dedicatedAllocation = "VK_KHR_dedicated_allocation"
    case deferredHostOperations = "VK_KHR_deferred_host_operations"
    case depthStencilResolve = "VK_KHR_depth_stencil_resolve"
    case descriptorUpdateTemplate = "VK_KHR_descriptor_update_template"
    case deviceGroup = "VK_KHR_device_group"
    case deviceGroupCreation = "VK_KHR_device_group_creation"
    case display = "VK_KHR_display"
    case displaySwapchain = "VK_KHR_display_swapchain"
    case drawIndirectCount = "VK_KHR_draw_indirect_count"
    case driverProperties = "VK_KHR_driver_properties"
    case externalFence = "VK_KHR_external_fence"
    case externalFenceCapabilities = "VK_KHR_external_fence_capabilities"
    case externalFenceFd = "VK_KHR_external_fence_fd"
    case externalFenceWin32 = "VK_KHR_external_fence_win32"
    case externalMemory = "VK_KHR_external_memory"
    case externalMemoryCapabilities = "VK_KHR_external_memory_capabilities"
    case externalMemoryFd = "VK_KHR_external_memory_fd"
    case externalMemoryWin32 = "VK_KHR_external_memory_win32"
    case externalSemaphore = "VK_KHR_external_semaphore"
    case externalSemaphoreCapabilities = "VK_KHR_external_semaphore_capabilities"
    case externalSemaphoreFd = "VK_KHR_external_semaphore_fd"
    case externalSemaphoreWin32 = "VK_KHR_external_semaphore_win32"
    case fragmentShadingRate = "VK_KHR_fragment_shading_rate"
    case getDisplayProperties2 = "VK_KHR_get_display_properties2"
    case getMemoryRequirements2 = "VK_KHR_get_memory_requirements2"
    case getPhysicalDeviceProperties2 = "VK_KHR_get_physical_device_properties2"
    case getSurfaceCapabilities2 = "VK_KHR_get_surface_capabilities2"
    case imageFormatList = "VK_KHR_image_format_list"
    case imagelessFramebuffer = "VK_KHR_imageless_framebuffer"
    case incrementalPresent = "VK_KHR_incremental_present"
    case maintenance1 = "VK_KHR_maintenance1"
    case maintenance2 = "VK_KHR_maintenance2"
    case maintenance3 = "VK_KHR_maintenance3"
    case multiview = "VK_KHR_multiview"
    case performanceQuery = "VK_KHR_performance_query"
    case pipelineExecutableProperties = "VK_KHR_pipeline_executable_properties"
    case pipelineLibrary = "VK_KHR_pipeline_library"
    case portabilitySubset = "VK_KHR_portability_subset"
    case presentId = "VK_KHR_present_id"
    case presentWait = "VK_KHR_present_wait"
    case pushDescriptor = "VK_KHR_push_descriptor"
    case rayQuery = "VK_KHR_ray_query"
    case rayTracingPipeline = "VK_KHR_ray_tracing_pipeline"
    case relaxedBlockLayout = "VK_KHR_relaxed_block_layout"
    case samplerMirrorClampToEdge = "VK_KHR_sampler_mirror_clamp_to_edge"
    case samplerYcbcrConversion = "VK_KHR_sampler_ycbcr_conversion"
    case separateDepthStencilLayouts = "VK_KHR_separate_depth_stencil_layouts"
    case shaderAtomicInt64 = "VK_KHR_shader_atomic_int64"
    case shaderClock = "VK_KHR_shader_clock"
    case shaderDrawParameters = "VK_KHR_shader_draw_parameters"
    case shaderFloat16Int8 = "VK_KHR_shader_float16_int8"
    case shaderFloatControls = "VK_KHR_shader_float_controls"
    case shaderNonSemanticInfo = "VK_KHR_shader_non_semantic_info"
    case shaderSubgroupExtendedTypes = "VK_KHR_shader_subgroup_extended_types"
    case shaderSubgroupUniformControlFlow = "VK_KHR_shader_subgroup_uniform_control_flow"
    case shaderTerminateInvocation = "VK_KHR_shader_terminate_invocation"
    case sharedPresentableImage = "VK_KHR_shared_presentable_image"
    case spirv_1_4 = "VK_KHR_spirv_1_4"
    case storageBufferStorageClass = "VK_KHR_storage_buffer_storage_class"
    case surface = "VK_KHR_surface"
    case surfaceProtectedCapabilities = "VK_KHR_surface_protected_capabilities"
    case swapchain = "VK_KHR_swapchain"
    case swapchainMutableFormat = "VK_KHR_swapchain_mutable_format"
    case synchronization2 = "VK_KHR_synchronization2"
    case timelineSemaphore = "VK_KHR_timeline_semaphore"
    case uniformBufferStandardLayout = "VK_KHR_uniform_buffer_standard_layout"
    case variablePointers = "VK_KHR_variable_pointers"
    case videoDecodeQueue = "VK_KHR_video_decode_queue"
    case videoEncodeQueue = "VK_KHR_video_encode_queue"
    case videoQueue = "VK_KHR_video_queue"
    case vulkanMemoryModel = "VK_KHR_vulkan_memory_model"
    case waylandSurface = "VK_KHR_wayland_surface"
    case win32KeyedMutex = "VK_KHR_win32_keyed_mutex"
    case win32Surface = "VK_KHR_win32_surface"
    case workgroupMemoryExplicitLayout = "VK_KHR_workgroup_memory_explicit_layout"
    case xcbSurface = "VK_KHR_xcb_surface"
    case xlibSurface = "VK_KHR_xlib_surface"
    case zeroInitializeWorkgroupMemory = "VK_KHR_zero_initialize_workgroup_memory"
    case formats4444Ext = "VK_EXT_4444_formats"
    case acquireDrmDisplayExt = "VK_EXT_acquire_drm_display"
    case acquireXlibDisplayExt = "VK_EXT_acquire_xlib_display"
    case astcDecodeModeExt = "VK_EXT_astc_decode_mode"
    case blendOperationAdvancedExt = "VK_EXT_blend_operation_advanced"
    case bufferDeviceAddressExt = "VK_EXT_buffer_device_address"
    case calibratedTimestampsExt = "VK_EXT_calibrated_timestamps"
    case colorWriteEnableExt = "VK_EXT_color_write_enable"
    case conditionalRenderingExt = "VK_EXT_conditional_rendering"
    case conservativeRasterizationExt = "VK_EXT_conservative_rasterization"
    case customBorderColorExt = "VK_EXT_custom_border_color"
    case debugMarkerExt = "VK_EXT_debug_marker"
    case debugReportExt = "VK_EXT_debug_report"
    case debugUtilsExt = "VK_EXT_debug_utils"
    case depthClipEnableExt = "VK_EXT_depth_clip_enable"
    case depthRangeUnrestrictedExt = "VK_EXT_depth_range_unrestricted"
    case descriptorIndexingExt = "VK_EXT_descriptor_indexing"
    case deviceMemoryReportExt = "VK_EXT_device_memory_report"
    case directModeDisplayExt = "VK_EXT_direct_mode_display"
    case directfbSurfaceExt = "VK_EXT_directfb_surface"
    case discardRectanglesExt = "VK_EXT_discard_rectangles"
    case displayControlExt = "VK_EXT_display_control"
    case displaySurfaceCounterExt = "VK_EXT_display_surface_counter"
    case extendedDynamicStateExt = "VK_EXT_extended_dynamic_state"
    case extendedDynamicState2Ext = "VK_EXT_extended_dynamic_state2"
    case externalMemoryDmaBufExt = "VK_EXT_external_memory_dma_buf"
    case externalMemoryHostExt = "VK_EXT_external_memory_host"
    case filterCubicExt = "VK_EXT_filter_cubic"
    case fragmentDensityMapExt = "VK_EXT_fragment_density_map"
    case fragmentDensityMap2Ext = "VK_EXT_fragment_density_map2"
    case fragmentShaderInterlockExt = "VK_EXT_fragment_shader_interlock"
    case fullScreenExclusiveExt = "VK_EXT_full_screen_exclusive"
    case globalPriorityExt = "VK_EXT_global_priority"
    case globalPriorityQueryExt = "VK_EXT_global_priority_query"
    case hdrMetadataExt = "VK_EXT_hdr_metadata"
    case headlessSurfaceExt = "VK_EXT_headless_surface"
    case hostQueryResetExt = "VK_EXT_host_query_reset"
    case imageDrmFormatModifierExt = "VK_EXT_image_drm_format_modifier"
    case imageRobustnessExt = "VK_EXT_image_robustness"
    case indexTypeUint8Ext = "VK_EXT_index_type_uint8"
    case inlineUniformBlockExt = "VK_EXT_inline_uniform_block"
    case lineRasterizationExt = "VK_EXT_line_rasterization"
    case memoryBudgetExt = "VK_EXT_memory_budget"
    case memoryPriorityExt = "VK_EXT_memory_priority"
    case metalSurfaceExt = "VK_EXT_metal_surface"
    case multiDrawExt = "VK_EXT_multi_draw"
    case pciBusInfoExt = "VK_EXT_pci_bus_info"
    case physicalDeviceDrmExt = "VK_EXT_physical_device_drm"
    case pipelineCreationCacheControlExt = "VK_EXT_pipeline_creation_cache_control"
    case pipelineCreationFeedbackExt = "VK_EXT_pipeline_creation_feedback"
    case postDepthCoverageExt = "VK_EXT_post_depth_coverage"
    case privateDataExt = "VK_EXT_private_data"
    case provokingVertexExt = "VK_EXT_provoking_vertex"
    case queueFamilyForeignExt = "VK_EXT_queue_family_foreign"
    case robustness2Ext = "VK_EXT_robustness2"
    case sampleLocationsExt = "VK_EXT_sample_locations"
    case samplerFilterMinmaxExt = "VK_EXT_sampler_filter_minmax"
    case scalarBlockLayoutExt = "VK_EXT_scalar_block_layout"
    case separateStencilUsageExt = "VK_EXT_separate_stencil_usage"
    case shaderAtomicFloatExt = "VK_EXT_shader_atomic_float"
    case shaderAtomicFloat2Ext = "VK_EXT_shader_atomic_float2"
    case shaderDemoteToHelperInvocationExt = "VK_EXT_shader_demote_to_helper_invocation"
    case shaderImageAtomicInt64Ext = "VK_EXT_shader_image_atomic_int64"
    case shaderStencilExportExt = "VK_EXT_shader_stencil_export"
    case shaderSubgroupBallotExt = "VK_EXT_shader_subgroup_ballot"
    case shaderSubgroupVoteExt = "VK_EXT_shader_subgroup_vote"
    case shaderViewportIndexLayerExt = "VK_EXT_shader_viewport_index_layer"
    case subgroupSizeControlExt = "VK_EXT_subgroup_size_control"
    case swapchainColorspaceExt = "VK_EXT_swapchain_colorspace"
    case texelBufferAlignmentExt = "VK_EXT_texel_buffer_alignment"
    case textureCompressionAstcHdrExt = "VK_EXT_texture_compression_astc_hdr"
    case toolingInfoExt = "VK_EXT_tooling_info"
    case transformFeedbackExt = "VK_EXT_transform_feedback"
    case validationCacheExt = "VK_EXT_validation_cache"
    case validationFeaturesExt = "VK_EXT_validation_features"
    case validationFlagsExt = "VK_EXT_validation_flags"
    case vertexAttributeDivisorExt = "VK_EXT_vertex_attribute_divisor"
    case vertexInputDynamicStateExt = "VK_EXT_vertex_input_dynamic_state"
    case videoDecodeH264Ext = "VK_EXT_video_decode_h264"
    case videoDecodeH265Ext = "VK_EXT_video_decode_h265"
    case videoEncodeH264Ext = "VK_EXT_video_encode_h264"
    case ycbcr_2plane_444FormatsExt = "VK_EXT_ycbcr_2plane_444_formats"
    case ycbcrImageArraysExt = "VK_EXT_ycbcr_image_arrays"
    case bufferMarkerAmd = "VK_AMD_buffer_marker"
    case deviceCoherentMemoryAmd = "VK_AMD_device_coherent_memory"
    case displayNativeHdrAmd = "VK_AMD_display_native_hdr"
    case drawIndirectCountAmd = "VK_AMD_draw_indirect_count"
    case gcnShaderAmd = "VK_AMD_gcn_shader"
    case gpuShaderHalfFloatAmd = "VK_AMD_gpu_shader_half_float"
    case gpuShaderInt16Amd = "VK_AMD_gpu_shader_int16"
    case memoryOverallocationBehaviorAmd = "VK_AMD_memory_overallocation_behavior"
    case mixedAttachmentSamplesAmd = "VK_AMD_mixed_attachment_samples"
    case negativeViewportHeightAmd = "VK_AMD_negative_viewport_height"
    case pipelineCompilerControlAmd = "VK_AMD_pipeline_compiler_control"
    case rasterizationOrderAmd = "VK_AMD_rasterization_order"
    case shaderBallotAmd = "VK_AMD_shader_ballot"
    case shaderCorePropertiesAmd = "VK_AMD_shader_core_properties"
    case shaderCoreProperties2Amd = "VK_AMD_shader_core_properties2"
    case shaderExplicitVertexParameterAmd = "VK_AMD_shader_explicit_vertex_parameter"
    case shaderFragmentMaskAmd = "VK_AMD_shader_fragment_mask"
    case shaderImageLoadStoreLodAmd = "VK_AMD_shader_image_load_store_lod"
    case shaderInfoAmd = "VK_AMD_shader_info"
    case shaderTrinaryMinmaxAmd = "VK_AMD_shader_trinary_minmax"
    case textureGatherBiasLodAmd = "VK_AMD_texture_gather_bias_lod"
    case externalMemoryAndroidHardwareBufferAndroid = "VK_ANDROID_external_memory_android_hardware_buffer"
    case externalMemoryFuchsia = "VK_FUCHSIA_external_memory"
    case externalSemaphoreFuchsia = "VK_FUCHSIA_external_semaphore"
    case imagepipeSurfaceFuchsia = "VK_FUCHSIA_imagepipe_surface"
    case decorateStringGoogle = "VK_GOOGLE_decorate_string"
    case displayTimingGoogle = "VK_GOOGLE_display_timing"
    case hlslFunctionality1Google = "VK_GOOGLE_hlsl_functionality1"
    case userTypeGoogle = "VK_GOOGLE_user_type"
    case invocationMaskHuawei = "VK_HUAWEI_invocation_mask"
    case subpassShadingHuawei = "VK_HUAWEI_subpass_shading"
    case filterCubicImg = "VK_IMG_filter_cubic"
    case formatPvrtcImg = "VK_IMG_format_pvrtc"
    case performanceQueryIntel = "VK_INTEL_performance_query"
    case shaderIntegerFunctions2Intel = "VK_INTEL_shader_integer_functions2"
    case iosSurfaceMvk = "VK_MVK_ios_surface"
    case macosSurfaceMvk = "VK_MVK_macos_surface"
    case viSurfaceNn = "VK_NN_vi_surface"
    case acquireWinrtDisplayNv = "VK_NV_acquire_winrt_display"
    case clipSpaceWScalingNv = "VK_NV_clip_space_w_scaling"
    case computeShaderDerivativesNv = "VK_NV_compute_shader_derivatives"
    case cooperativeMatrixNv = "VK_NV_cooperative_matrix"
    case cornerSampledImageNv = "VK_NV_corner_sampled_image"
    case coverageReductionModeNv = "VK_NV_coverage_reduction_mode"
    case dedicatedAllocationNv = "VK_NV_dedicated_allocation"
    case dedicatedAllocationImageAliasingNv = "VK_NV_dedicated_allocation_image_aliasing"
    case deviceDiagnosticCheckpointsNv = "VK_NV_device_diagnostic_checkpoints"
    case deviceDiagnosticsConfigNv = "VK_NV_device_diagnostics_config"
    case deviceGeneratedCommandsNv = "VK_NV_device_generated_commands"
    case externalMemoryNv = "VK_NV_external_memory"
    case externalMemoryCapabilitiesNv = "VK_NV_external_memory_capabilities"
    case externalMemoryRdmaNv = "VK_NV_external_memory_rdma"
    case externalMemoryWin32Nv = "VK_NV_external_memory_win32"
    case fillRectangleNv = "VK_NV_fill_rectangle"
    case fragmentCoverageToColorNv = "VK_NV_fragment_coverage_to_color"
    case fragmentShaderBarycentricNv = "VK_NV_fragment_shader_barycentric"
    case fragmentShadingRateEnumsNv = "VK_NV_fragment_shading_rate_enums"
    case framebufferMixedSamplesNv = "VK_NV_framebuffer_mixed_samples"
    case geometryShaderPassthroughNv = "VK_NV_geometry_shader_passthrough"
    case glslShaderNv = "VK_NV_glsl_shader"
    case inheritedViewportScissorNv = "VK_NV_inherited_viewport_scissor"
    case meshShaderNv = "VK_NV_mesh_shader"
    case rayTracingNv = "VK_NV_ray_tracing"
    case rayTracingMotionBlurNv = "VK_NV_ray_tracing_motion_blur"
    case representativeFragmentTestNv = "VK_NV_representative_fragment_test"
    case sampleMaskOverrideCoverageNv = "VK_NV_sample_mask_override_coverage"
    case scissorExclusiveNv = "VK_NV_scissor_exclusive"
    case shaderImageFootprintNv = "VK_NV_shader_image_footprint"
    case shaderSmBuiltinsNv = "VK_NV_shader_sm_builtins"
    case shaderSubgroupPartitionedNv = "VK_NV_shader_subgroup_partitioned"
    case shadingRateImageNv = "VK_NV_shading_rate_image"
    case viewportArray2Nv = "VK_NV_viewport_array2"
    case viewportSwizzleNv = "VK_NV_viewport_swizzle"
    case win32KeyedMutexNv = "VK_NV_win32_keyed_mutex"
    case cudaKernelLaunchNv = "VK_NV_cuda_kernel_launch"
    case binaryImportNvx = "VK_NVX_binary_import"
    case imageViewHandleNvx = "VK_NVX_image_view_handle"
    case multiviewPerViewAttributesNvx = "VK_NVX_multiview_per_view_attributes"
    case renderPassShaderResolveQcom = "VK_QCOM_render_pass_shader_resolve"
    case renderPassStoreOpsQcom = "VK_QCOM_render_pass_store_ops"
    case renderPassTransformQcom = "VK_QCOM_render_pass_transform"
    case rotatedCopyCommandsQcom = "VK_QCOM_rotated_copy_commands"
    case screenSurfaceQnx = "VK_QNX_screen_surface"
    case mutableDescriptorTypeValve = "VK_VALVE_mutable_descriptor_type"
}

internal extension VkExtensionProperties {
    var nameVersionKeyValue: (name: VulkanExtensionName, version: UInt)? {
        guard let name = VulkanExtensionName(rawValue: String(cStringTuple: extensionName)) else {
            return nil
        }
        return (name: name, version: UInt(specVersion))
    }
}

extension Array where Element == VulkanExtensionName {
    var cStrings: [SmartPointer<Int8>] {
        return map { $0.rawValue }.cStrings
    }
}

extension Set where Element == VulkanExtensionName {
    var cStrings: [SmartPointer<Int8>] {
        return Array(self).cStrings
    }
}
