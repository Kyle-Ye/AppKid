//
//  LayerVertexShader.volcano
//  ContentAnimation
//
//  Created by Serhii Mumriak on 10.06.2021.
//

#version 450
#pragma shader_stage(vertex)

// two triangles: t0 and t1. starting with top left vertice
// t0.0 - top left, t0.1 - top right, t0.2 - bottom right
// t1.0 - top left, t1.1 - bottom left, t1.2 - bottom right
// x and y are position
// z and w are texture coordinates
const vec4 vertices[] =
{
    vec4(+0.0, +0.0, 0.0, 0.0), // t0.0
    vec4(+1.0, +0.0, 1.0, 0.0), // t0.1
    vec4(+1.0, +1.0, 1.0, 1.0), // t0.2
    vec4(+0.0, +0.0, 0.0, 0.0), // t1.0
    vec4(+0.0, +1.0, 0.0, 1.0), // t1.1
    vec4(+1.0, +1.0, 1.0, 1.0), // t1.2
};

layout(binding = 0) uniform UniformBufferObject 
{
    mat4 model;
    mat4 view;
    mat4 projection;
} matrices;

@in LayerRenderDescriptor UNUSED_NAME;

@out vec2 textureCoordinates;
@out LayerRenderDescriptor layer;

void main() 
{
    gl_Position = matrices.projection * transform * vec4(vertices[gl_VertexIndex].xy, 0.0, 1.0);
    
    textureCoordinates = vertices[gl_VertexIndex].zw;

    layer.transform = transform;
    layer.contentsTransform = contentsTransform;
    layer.position = position;
    layer.anchorPoint = anchorPoint;
    layer.bounds = bounds;
    layer.backgroundColor = backgroundColor;
    layer.borderColor = borderColor;
    layer.borderWidth = borderWidth;
    layer.cornerRadius = cornerRadius;
    layer.shadowOffset = shadowOffset;
    layer.shadowColor = shadowColor;
    layer.shadowRadius = shadowRadius;
    layer.shadowOpacity = shadowOpacity;
}
