//
//  CommonGenerator.swift
//  Volcano
//
//  Created by Serhii Mumriak on 29.06.2023
//

import Foundation
import SemanticVersion
import TinyFoundation
import Yams

public let kMetadataSerializedPrefix = "// #*# "
internal let kIndentationUnit = String(repeating: " ", count: 4)

public protocol Generator {
    func resultString(with parser: __shared Parser) throws -> String
    var license: String { get }
    func top(from parser: __shared Parser) throws -> String
    func bottom(from parser: __shared Parser) throws -> String
}

public extension Generator {
    func write(to fileURL: URL, parser: __shared Parser) throws {
        try resultString(with: parser).write(to: fileURL, atomically: true, encoding: .utf8)
    }

    func header(from parser: __shared Parser) throws -> String {
        var metadataHeader = MetadataHeader_v1()
        metadataHeader.vulkanVersion = parser.version

        let yamlEncoder = YAMLEncoder()
        let metadata = try yamlEncoder.encode(metadataHeader)
            .components(separatedBy: .newlines)
            .filter { $0.isEmpty == false }
            .map { kMetadataSerializedPrefix + $0 }
            .joined(separator: .newline)
            
        return try
            """
            // WARNING: DO NOT MODIFY
            // This file is generated by vkthings tool
            \(metadata)
            \(license)

            \(top(from: parser))

            """
    }

    func footer(from parser: __shared Parser) throws -> String {
        return try
            """
            
            \(bottom(from: parser))
            
            """
    }
}
