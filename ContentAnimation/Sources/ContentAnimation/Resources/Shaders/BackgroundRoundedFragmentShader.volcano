//
//  BackgroundRoundedFragmentShader.volcano
//  ContentAnimation
//
//  Created by Serhii Mumriak on 10.06.2021.
//

#version 450
#pragma shader_stage(fragment)

#include "Rectangle.h"

@in vec2 textureCoordinates;
@in LayerRenderDescriptor layer;

@out vec4 outColor;

void main() 
{
    vec2 measuredPoint = textureCoordinates * layer.bounds.zw;
    float distanceToRect = distanceToRoundedRect(measuredPoint, layer.bounds, layer.cornerRadius, vec2(0.0));
    float distanceToTest = distanceToRect - layer.cornerRadius;

    if (layer.borderWidth > 0.0 && layer.borderColor.a == 1.0) {
        distanceToTest += layer.borderWidth * 0.5;
    }

    float antialiasingMask = clamp(-distanceToTest / fwidth(distanceToTest), 0.0, 1.0);
    // float antialiasingMask = clamp(0.5 - distanceToTest / fwidth(distanceToTest), 0.0, 1.0);
    outColor = vec4(layer.backgroundColor.rgb, layer.backgroundColor.a * antialiasingMask);
}
